{"ast":null,"code":"//This file is used to retrieve the mock data from the json files\nexport default function getData(table) {\n  let rawFile = null;\n\n  if (table > 3) {\n    table = Math.floor(Math.random() * 3);\n  }\n\n  if (table === 1) {\n    rawFile = require('./customers.json');\n  } else if (table === 2) {\n    rawFile = require('./suppliers.json');\n  } else if (table === 3) {\n    rawFile = require('./products.json');\n  }\n\n  let headers = [];\n  let rows = [];\n\n  for (var i = 0; i < rawFile.length; i++) {\n    const row = rawFile[i];\n\n    if (i === 0) {\n      for (const item in row) {\n        headers.push(row[item]);\n      }\n    } else {\n      let temp = [];\n\n      for (const item in row) {\n        temp.push(row[item]);\n      }\n\n      rows.push(temp);\n    }\n  }\n\n  return {\n    headers,\n    rows\n  };\n}","map":{"version":3,"names":["getData","table","rawFile","Math","floor","random","require","headers","rows","i","length","row","item","push","temp"],"sources":["D:/Apps/sql-editor-master/src/mockData/getData.js"],"sourcesContent":["//This file is used to retrieve the mock data from the json files\n\nexport default function getData (table) {\n    let rawFile = null;\n    if(table > 3) {\n        table = Math.floor(Math.random() * 3);\n    }\n    if(table === 1) {\n        rawFile = require('./customers.json');\n    } else if(table === 2) {\n        rawFile = require('./suppliers.json');\n    } else if(table === 3) {\n        rawFile = require('./products.json');\n    }\n    let headers = [];\n    let rows = [];\n    for(var i = 0 ; i < rawFile.length ; i++) {\n        const row = rawFile[i]\n        if(i === 0) {\n            for(const item in row) {\n                headers.push(row[item]);\n            }\n        } else {\n            let temp = [];\n            for(const item in row) {\n                temp.push(row[item]);\n            }\n            rows.push(temp);\n        }\n    }\n    return {headers, rows};\n}"],"mappings":"AAAA;AAEA,eAAe,SAASA,OAAT,CAAkBC,KAAlB,EAAyB;EACpC,IAAIC,OAAO,GAAG,IAAd;;EACA,IAAGD,KAAK,GAAG,CAAX,EAAc;IACVA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAR;EACH;;EACD,IAAGJ,KAAK,KAAK,CAAb,EAAgB;IACZC,OAAO,GAAGI,OAAO,CAAC,kBAAD,CAAjB;EACH,CAFD,MAEO,IAAGL,KAAK,KAAK,CAAb,EAAgB;IACnBC,OAAO,GAAGI,OAAO,CAAC,kBAAD,CAAjB;EACH,CAFM,MAEA,IAAGL,KAAK,KAAK,CAAb,EAAgB;IACnBC,OAAO,GAAGI,OAAO,CAAC,iBAAD,CAAjB;EACH;;EACD,IAAIC,OAAO,GAAG,EAAd;EACA,IAAIC,IAAI,GAAG,EAAX;;EACA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGP,OAAO,CAACQ,MAA5B,EAAqCD,CAAC,EAAtC,EAA0C;IACtC,MAAME,GAAG,GAAGT,OAAO,CAACO,CAAD,CAAnB;;IACA,IAAGA,CAAC,KAAK,CAAT,EAAY;MACR,KAAI,MAAMG,IAAV,IAAkBD,GAAlB,EAAuB;QACnBJ,OAAO,CAACM,IAAR,CAAaF,GAAG,CAACC,IAAD,CAAhB;MACH;IACJ,CAJD,MAIO;MACH,IAAIE,IAAI,GAAG,EAAX;;MACA,KAAI,MAAMF,IAAV,IAAkBD,GAAlB,EAAuB;QACnBG,IAAI,CAACD,IAAL,CAAUF,GAAG,CAACC,IAAD,CAAb;MACH;;MACDJ,IAAI,CAACK,IAAL,CAAUC,IAAV;IACH;EACJ;;EACD,OAAO;IAACP,OAAD;IAAUC;EAAV,CAAP;AACH"},"metadata":{},"sourceType":"module"}